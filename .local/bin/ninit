#!/usr/bin/env bash

touch .gitignore
tee .gitignore << EOF > /dev/null
# OS
.DS_Store
Thumbs.db

# IDEs and editors
/.project
/.idea
/.vscode

# environment
.env.local

# npm
.npm
npm-debug.log*
node_modules/
*.tgz

# yarn
.yarn-integrity
yarn.lock
yarn-debug.log*
yarn-error.log*
EOF

git init > /dev/null

touch .npmrc
tee .npmrc << EOF > /dev/null
save-exact=true
update-notifier=false
EOF

npm init -y > /dev/null
npm install --save-dev --silent prettier cspell husky lint-staged typescript eslint @fullstacksjs/eslint-config @fullstacksjs/tsconfig

touch .eslintrc.js
tee .eslintrc.js << EOF > /dev/null
const { init } = require('@fullstacksjs/eslint-config/init');

module.exports = init({
  modules: {
    auto: true,
    typescript: {
      parserProject: './tsconfig.json',
      resolverProject: './tsconfig.json',
    },
  },
  root: true,
});
EOF

touch .prettierrc
tee .prettierrc << EOF > /dev/null
{
  "arrowParens": "always",
  "bracketSpacing": true,
  "endOfLine": "lf",
  "htmlWhitespaceSensitivity": "css",
  "insertPragma": false,
  "bracketSameLine": false,
  "jsxSingleQuote": false,
  "printWidth": 80,
  "proseWrap": "always",
  "quoteProps": "as-needed",
  "requirePragma": false,
  "semi": true,
  "singleQuote": true,
  "tabWidth": 2,
  "trailingComma": "all",
  "useTabs": false
}
EOF

touch .editorconfig
tee .editorconfig << EOL > /dev/null
root = true

[*]
charset = utf-8
end_of_line = lf
indent_size = 2
indent_style = space
insert_final_newline = true
trim_trailing_whitespace = true

[*.{js,ts,jsx,tsx}]
quote_type = single
curly_bracket_next_line = false
spaces_around_brackets = inside
indent_brace_style = BSD KNF

[*.md]
max_line_length = off
trim_trailing_whitespace = false
EOL

touch tsconfig.json
tee tsconfig.json << EOF > /dev/null
{
  "root": true,
  "extends": "@fullstacksjs/tsconfig/esm",
  "exclude": ["node_modules"]
}
EOF

touch lint-staged.config.js
tee lint-staged.config.js << EOF > /dev/null
module.exports = {
  '*.{md,json}': ['prettier --write', 'cspell --no-must-find-files'],
  '*.{ts,tsx}': ['eslint --fix', 'cspell --no-must-find-files'],
};
EOF

touch .cspell.json
tee .cspell.json << EOF > /dev/null
{
  "version": "0.2",
  "ignorePaths": [
    "node_modules/",
    "dist/"
  ]
}
EOF

npx husky-init

tee .husky/commit-msg << EOF > /dev/null
#!/usr/bin/env sh
. "\$(dirname "\$0")/_/husky.sh"

npx --no cspell "$1"
EOF

tee .husky/pre-commit << EOF > /dev/null
#!/usr/bin/env sh
. "\$(dirname "\$0")/_/husky.sh"

npx --no lint-staged
EOF


echo "Done"
