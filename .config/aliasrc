#!/bin/bash

edit() {
  $EDITOR "$@"
}

# clear
alias c='clear'
alias clwer='clear'
alias cc='clear'
alias cear='clear'
alias cler='clear'
alias clea='clear'
alias clar='clear'
alias clewar='clear'
alias lear='clear'
alias celra='clear'
alias clera='clear'
alias claer='clear'
alias celar='clear'
alias clare='clear'

# enhance tools
[ -x "$(command -v bat)"    ] && alias cat="bat"
[ -x "$(command -v curlie)" ] && alias curl="curlie"
[ -x "$(command -v nvim)"   ] && alias vim="nvim"
# [ -x "$(command -v neovide)"   ] && alias vim="neovide --multigrid"

# utility
alias swclicks='xmodmap -e "pointer = 3 2 1"'

# npx commands
alias oao='npx oao'
alias np='npx np'
alias nx='npx nx'
alias tsc='npx tsc'
alias heroku='npx heroku'
s() {
  [ -f ./.skill/env ] && . ./.skill/env
}

# enhance commands
alias :q='exit'
alias cp="cp -i"
alias df='df -h'
function dff() {
  df | awk '/\/dev\/nvme0/ && ! /boot/ { print $6, $3"/"$2 }'
}
alias grep='grep --color'
alias ls='ls --color'
alias mkdir='mkdir -pv'

function l() {
  local level=${2:-1}
  set -- "${@:1:1}" "${@:3}"
  exa -all --no-permissions --no-time --no-user --tree --group-directories-first --no-filesize --color always -l --ignore-glob="node_modules" --level "$level" "$@" | less -XFR
}

# super user commands
alias usermod='sudo usermod'
alias chmod='sudo chmod'
alias chown='sudo chown'
alias dhcpcd='sudo dhcpcd'
alias pacman-mirrors='sudo pacman-mirrors'
alias systemctl='systemctl'
alias pacman='lazy-pacman'
alias cpssh='gpg --export-ssh-key frontendmonster@gmail.com | scopy'
alias x="sudo chmod +x"
alias unlock-pacman="sudo rm /var/lib/pacman/db.lck"
alias orphan='pacman -Rs $(pacman -Qqtd)'
alias gpgreload='gpg-connect-agent reloadagent /bye'
function users() {
  awk -F ':' '{print $1}' /etc/passwd
}

function shells() {
  awk -F '/' '/^\// {print $NF}' /etc/shells | uniq | sort
}

# path shorcuts
alias ~='cd ~'
alias ..='cd ..'
alias dt='cd ~/desktop'

# sysadmin
alias findstr='grep -rnw'
alias afind='ack -il'
alias path='echo -e ${PATH//:/\\n} | sort'
alias fpath="echo $fpath | tr ' ' '\n' | sort"
alias history=omz_history
alias cpwd='pwd | xsel -i --clipboard'
alias clocksync='sudo ntpdate 1.ro.pool.ntp.org'

font() {
  fc-list -v | grep -i -e "family:.*$1" | sort | uniq
}

which-font() {
  FC_DEBUG=4 pango-view -q -t $1 2>&1 | grep -o 'family: "[^"]\+' | cut -c 10- | tail -n 1
}

which-mime() {
  XDG_UTILS_DEBUG_LEVEL=10 xdg-mime query default "$@"
}

# process
alias find-gpu='ps aux | grep gpu-process | grep'
alias fuck='killall -9'
killport() {
  kill $(port "$1" | awk '{ print $7 }' | cut -d "/" -f1)
}

killit() {
  ps aux | grep -v "grep" | grep "$@" | awk '{print $2}' | xargs sudo kill
}

process() {
  if [[ $(pidof $1) ]]; then
    # show process memory usage
    echo
    ps aux | grep $1 | grep -v grep | awk 'BEGIN { sum=0 } {sum=sum+$6; } END {printf("[Totall memory used by process] : %s Mb\n",sum / 1024)}'
    # show memory usage
    echo
    free -m | awk 'NR==2{printf "[System memory status] : %s/%s Mb (%.2f%%)\n", $3,$2,$3*100/$2 }'

    # show process pid childs
    local counter=0
    for pid in $(pidof $1); do
      ((counter++))
    done
    echo -e "\n[Child process count] : $counter\n"
  else
    echo "Process doesn't exist!"
  fi
}

# nmcli
alias down='nmcli c down'
alias up='nmcli c up'
alias connect='nmcli device wifi connect'

# config files
alias hosts='sudoedit /etc/hosts'
alias dnsrc='sudoedit /etc/resolv.conf'
alias historyrc='edit ~/.local/share/history'
alias bookmarkrc='edit $HOME/.config/bookmarkrc'
alias profilerc='edit ~/.profile'
alias bashrc='edit ~/.bashrc'
alias sshrc='edit ~/.ssh/config'
alias gitrc='edit $XDG_CONFIG_HOME/git/config'
alias zalias='edit $XDG_CONFIG_HOME/aliasrc'
alias envrc='edit $XDG_CONFIG_HOME/env'
alias mocrc='edit $XDG_CONFIG_HOME/moc/config'
alias zshrc='edit $XDG_CONFIG_HOME/zsh/.zshrc'
alias npmrc='edit $XDG_CONFIG_HOME/npm/npmrc'
alias vimrc='edit $XDG_CONFIG_HOME/nvim/init.lua'
alias vimplug='edit $XDG_CONFIG_HOME/nvim/plugins.vim'
alias tmuxrc='edit $XDG_CONFIG_HOME/tmux/tmux.conf'
alias rangerrc='edit $XDG_CONFIG_HOME/ranger/rc.conf'
alias alacrittyrc='edit $XDG_CONFIG_HOME/alacritty/alacritty.yml'
alias i3rc='edit $XDG_CONFIG_HOME/i3/config'
alias polybarrc='edit $XDG_CONFIG_HOME/polybar/config.ini'
alias fontrc='edit $XDG_CONFIG_HOME/fontconfig/'
alias gpgrc='edit $GNUPGHOME/gpg-agent.conf'
alias xinitrc='edit $XDG_CONFIG_HOME/X11/xinitrc'
alias sxrc='edit $XDG_CONFIG_HOME/sxhkd/sxhkdrc'

alias reload='source $XDG_CONFIG_HOME/aliasrc && source $XDG_CONFIG_HOME/bookmarkrc'
alias xreload='xrdb $XDG_CONFIG_HOME/X11/Xresources'
alias resx='pkill sxhkd; sxhkd &'

# file system
alias lsa='ls -AF --group-directories-first'
alias lless='l | less'
alias laless='ll | less'
alias rd=rmdir
alias open='xdg-open'

mk() {
  mkdir "$1" && cd "$1"
}

tmp() {
  local TD="$(mktemp --directory)"
  cd $TD
}

# logs
alias i3logs="DISPLAY=:0 i3-dump-log"

# network
alias getip="curl -s -S https://icanhazip.com"
alias mac="getMac $WIFI_ADAPTOR"
alias ping='ping -i 1 -O'
alias scanip='nmap -sn 192.168.1.0/24'

port() {
  sudo netstat -tulpn | grep :"$1"
}

getMac() {
  ip link show "$@" | grep link | awk '{ print $2 }'
}

localip() {
  ip addr show $WIFI_ADAPTOR | grep 'inet ' | awk '{ print $2 }'
}

netinfo() {
  printf "Local IP:\t%s\nMac Addr:\t%s\nGlobal IP:\t%s\n" "$(localip)" "$(mac)" "$(getip)"
}

shecan() {
  printf "nameserver 178.22.122.100\nnameserver 185.51.200.2\n" | sudo tee /etc/resolv.conf
}

setd() {
  printf "nameserver 1.1.1.1\nnameserver 4.2.2.4\n" | sudo tee /etc/resolv.conf
}

for method in GET HEAD POST PUT PATCH DELETE TRACE OPTIONS; do
  alias "$method"="curlie -X '$method' -H 'content-type: application/json'"
done

cors() {
  local URL="$1"
  shift
  local ORIGIN="$1" 
  shift

  curl "$URL" \
    -H "Accept: application/json, text/plain, */*" \
    -H "Origin: $ORIGIN" \
    -H "Access-Control-Request-Method: POST" \
    -H "Sec-Fetch-Mode: cors" \
    -X OPTIONS \
    -i "$@"
}

l1() {
  local EXT=${2:-"ts"}
  find "$1" -maxdepth 1 -name "*.$EXT" -type f -exec basename {} ".$EXT" \; | xsel -ib
}

# Other packages
alias pac='pacman -S'
alias pacr='pacman -R'
alias pacls='pacman -Qi'

# npm
alias npmls='npm ls --depth 0'
alias npmr='npm remove'
alias npmi='npm install'
alias npmg='npm install --location=global'
alias npms='npm start'
alias npmb='npm run build'
alias npmt='npm test'
alias npmd='npm install -D'
alias npmo='npm outdated'
alias npmp='npm publish'
alias npmv='npm -v'
nvers() {
  npm show $1 versions
}
alias ncu='npm-check -u'
alias nrc='npm run commit'
alias cleannm='find . -name "node_modules" -type d -exec sudo rm -rf {} \;'
alias renpm='rm -rf node_modules && rm ./package-lock.json && npm i'
alias monore='find . -name "node_modules" -type d -exec sudo rm -rf {} \; ; npx lerna bootstrap && npm install'

## docker-compose
alias dc='docker-compose'
alias dcd='docker-compose -f ./docker-compose.dev.yml'
alias drmi='docker rmi $(sudo docker images -a --filter=dangling=true -q) 2>/dev/null'
alias drm='docker rm $(sudo docker ps --filter=status=exited --filter=status=created -q) 2>/dev/null'
alias dps='docker ps -a'
alias dim='docker images | tail -n +2 | sort'
alias trash='git add . && git commit -m 'debug' --no-verify && git push'
alias trash!='git add . && git commit --amend --no-edit --no-verify && git push -f --force-with-lease'

## docker
dip() {
  docker container inspect --format="{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}" $1 | tr -d '\n' | xsel -i -b
}
alias d='ALL_PROXY=socks5://localhost:6000 docker'

## git
alias clone='git clone'
alias gs='git status -s'
alias gss='git status'
alias gsl='git stash list'
alias gf='git fetch'
alias gfp='git fetch --prune'

# alias ga='git add'
alias gaa='git add . && git status -s'

alias gb='git branch -v'
alias gbr='git branch --remote'
alias gba='git branch -a'
alias gbd='git branch -d'
alias gbD='git branch -D'

alias gc='git commit -v'
alias 'gca'='git commit --amend'
alias 'gc!'='git commit -v --amend --no-edit'
alias gcam='git commit -a -m'
alias gcm='git commit -m'

alias gswc='git switch -c'
alias gswd='git switch dev && git pull'
alias gwip='git wip'
alias gco='git checkout'
alias gsw='git switch'

alias pull='git pull'
alias push='git push'
alias 'push!'='git push origin $(git_current_branch) --force --no-force-with-lease'
alias pushu='git push --set-upstream origin $(git_current_branch)'

alias gcount='git shortlog -sn'
alias gl='git log --oneline --decorate'
alias glog='git lg2 | emojify | less -r'
alias gloga='git lg | emojify | less -r'
alias glog2="git lg --pretty=format:'%C(yellow)%h%Creset %C(bold blue)%an%C(reset) - %s - %Creset %C(yellow)%d%Creset %C(green)(%cr)%Creset' --abbrev-commit --date=relative | emojify | less -r"
alias gls='git log --stat'

function gdep() {
  git tag -a "$1" -m "$1" && git push
}
alias gm='git merge'
alias gma='git merge --abort'
alias gmt='git mergetool --no-prompt'
alias gmtvim='git mergetool --no-prompt --tool=vimdiff'

alias gr='git reset'
alias gra='git reset .'
alias grh='git reset HEAD'
alias grhh='git reset HEAD --hard'

alias grmv='git remote rename'
alias grrm='git remote remove'
alias grset='git remote set-url'
alias grup='git remote update'
alias grv='git remote -v'
alias gro='git remote add origin'
alias groot='git commit -m "root" --allow-empty'

# alias grb='git rebase'
alias grba='git rebase --abort'
alias grbc='git rebase --continue'
alias grbs='git rebase --skip'
alias grbi='git rebase -i'

alias gt='git tag'
alias gtv='git tag | sort -V'
alias count-line='git total --numstat -- . ":(exclude)yarn.lock"'

alias gdc='gd --cached'

## tools
alias sskey="screenkey -t 2 -s small --vis-shift &>/dev/null &"
alias genpass="openssl rand -base64 32"


lazy-pacman() {
  case $1 in
  -S | -D | -S[^sih]* | -R* | -U*)
    /usr/bin/sudo /usr/bin/pacman "$@"
    ;;
  *) /usr/bin/pacman "$@" ;;
  esac
}

# ex - archive extractor
ex() {
  if [ -f "$1" ]; then
    case "$1" in
    *.tar.bz2) tar xjf "$1" ;;
    *.tar.xz) tar xf "$1" ;;
    *.tar.gz) tar xzf "$1" ;;
    *.bz2) bunzip2 "$1" ;;
    *.rar) unrar x "$1" ;;
    *.gz) gunzip "$1" ;;
    *.tar) tar xf "$1" ;;
    *.tbz2) tar xjf "$1" ;;
    *.tgz) tar xzf "$1" ;;
    *.zip) unzip "$1" ;;
    *.Z) uncompress "$1" ;;
    *.7z) 7z x "$1" ;;
    *) echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

fix_perms() {
  find . -type f ! -path '*/node_modules/*' -exec chmod 0664 {} \;
  find . -type d ! -path '*/node_modules/*' -exec chmod 0775 {} \;
}

batt() {
  BAT=${1:-BAT0}
  capacity=$(head /sys/class/power_supply/$BAT/charge_full)
  design=$(head /sys/class/power_supply/$BAT/charge_full_design)
  bc <<<"scale=2; $capacity / $design"
}

compress() {
  ffmpeg -i "$1" -codec:v libx264 -preset medium -crf 23 "$1.mp4"
}
